// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Questions.API.Data;

#nullable disable

namespace Questions.API.Migrations
{
    [DbContext(typeof(NZWalksDBContext))]
    [Migration("20221227213244_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Questions.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Area")
                        .HasColumnType("REAL");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double>("Long")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Population")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4467c0fa-6be8-4237-a313-2e6e8f98a8e5"),
                            Area = 22.0,
                            Code = "AUCK",
                            Lat = 33.0,
                            Long = 44.0,
                            Name = "Auckland",
                            Population = 45.0
                        },
                        new
                        {
                            Id = new Guid("22fda770-9b6f-451f-9ca7-d884436f0acd"),
                            Area = 34.0,
                            Code = "NEW",
                            Lat = 22.0,
                            Long = 11.0,
                            Name = "Newland",
                            Population = 77.0
                        });
                });

            modelBuilder.Entity("Questions.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Length")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WalkDifficultyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("WalkDifficultyId");

                    b.ToTable("Walks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc4757c7-b0e9-4086-8783-6ce945c0efcc"),
                            Length = 3.5,
                            Name = "One Three Hill Walk",
                            RegionId = new Guid("4467c0fa-6be8-4237-a313-2e6e8f98a8e5"),
                            WalkDifficultyId = new Guid("b9bf707c-89fb-45f2-88af-9a2482deb9d9")
                        },
                        new
                        {
                            Id = new Guid("3cf773d7-b72b-4b16-a09a-99623bb03c3b"),
                            Length = 3.5,
                            Name = "Rainbow Mou",
                            RegionId = new Guid("22fda770-9b6f-451f-9ca7-d884436f0acd"),
                            WalkDifficultyId = new Guid("40ffdbe8-cf26-4c71-94cb-ec184b78793d")
                        });
                });

            modelBuilder.Entity("Questions.API.Models.Domain.WalkDifficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WalkDifficulty");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9bf707c-89fb-45f2-88af-9a2482deb9d9"),
                            Code = "Code 1"
                        },
                        new
                        {
                            Id = new Guid("40ffdbe8-cf26-4c71-94cb-ec184b78793d"),
                            Code = "Code 2"
                        });
                });

            modelBuilder.Entity("Questions.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("Questions.API.Models.Domain.Region", "Region")
                        .WithMany("Walks")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Questions.API.Models.Domain.WalkDifficulty", "WalkDifficulty")
                        .WithMany()
                        .HasForeignKey("WalkDifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("WalkDifficulty");
                });

            modelBuilder.Entity("Questions.API.Models.Domain.Region", b =>
                {
                    b.Navigation("Walks");
                });
#pragma warning restore 612, 618
        }
    }
}
